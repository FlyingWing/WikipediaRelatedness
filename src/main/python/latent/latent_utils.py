import os
import json
from gensim import utils
from pyhocon import ConfigFactory


def extract_json_pages(filename, filter_namespaces=False):
    with utils.smart_open(filename) as fin:
        for line in fin:
            document = json.loads(line.strip())

            title = document['wikiTitle']
            text = ' '.join(document['sentences'])
            wiki_id = str(document['wikiId'])

            yield title, text, wiki_id



def absolute_path(filename):
    '''
    :param filename:
    :return: Absolute path of filename
    '''
    WORKING_DIR = os.path.dirname(os.path.abspath(__file__))
    return os.path.join(WORKING_DIR, filename)




def dataset_paths():
    reference = absolute_path('../../resources/reference.conf')

    conf =  ConfigFactory.parse_file(reference)
    corrdir = conf.get_string('wikipediarelatedness.benchmark.correlation')

    datapaths = []
    for dataname in os.listdir(corrdir):
        datapaths.append( os.path.join(corrdir, dataname) )

    return datapaths



def configuration():
    """
    :return: Dictionary of the reference.conf file.
    """
    reference = absolute_path('../../resources/reference.conf')
    return ConfigFactory.parse_file(reference).get('wikipediarelatedness')


LEMMING = True  # whether using lemmatization or not


conf = configuration()
wikiconf = conf.get('wikipedia')


WIKI_CORPUS = wikiconf.get('corpus')
WIKI_LINKS = wikiconf.get('links')


#
# Gensim Pre-processing

# Warning: Refactored
#GENSIM_DIR = absolute_path('../../../../data/processing/wikipedia/latent/gensim')
WIKI_STATS = 'wiki_corpus'  # name of the beginnig of each file generated by Genism
#WIKI_FILENAME = os.path.join(GENSIM_DIR, WIKI_STATS + '/' + WIKI_STATS + '_')

WIKI_FILENAME = os.path.join( wikiconf.get('latent.lda.corpus'), WIKI_STATS + '_' )


#
# Gensim LDA Topic Modeling

WIKI_LDA_DIR = wikiconf.get('latent.lda.topics')
# WIKI_LDA_MODEL = os.path.join(WIKI_LDA_DIR, 'lda_model')
# WIKI_LDA_DOCS = os.path.join(WIKI_LDA_DIR, 'lda_wiki_docs.gz')

LDA_MODEL_DIR = lambda num_topics: os.path.join(WIKI_LDA_DIR, str(num_topics) + '/model')
LDA_MODEL_FILENAME = lambda num_topics: os.path.join(LDA_MODEL_DIR(num_topics), "/wiki_lda_model")


#
# To be refactored with reference.conf

WIKI_SVD_DIR = absolute_path('../../../../data/processing/wikipedia/latent/svd')

LAPLACIAN_PINV_DIR = absolute_path('../../../../data/processing/wikipedia/latent/pinv')